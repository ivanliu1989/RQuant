% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findScripts.R
\name{findScriptsByParsing}
\alias{findScriptsByParsing}
\title{Find Scripts that contain an object or package-dependency by parsing them}
\usage{
findScriptsByParsing(path = ".", filename_pattern = ".R$",
  recursive = FALSE, pkg = NULL, code_target, func_pattern = "")
}
\arguments{
\item{path}{a character vector of full path names; the default corresponds to
the working directory, \code{\link{getwd}}. Tilde expansion
(see \code{\link{path.expand}}) is performed. Missing values will be ignored.}

\item{filename_pattern}{a regular expression- default is \code{'.R$'}. Only file
names which match the regular expression will be returned.}

\item{recursive}{logical. Should the listing recurse into directories?}

\item{pkg}{The name of a \emph{currently loaded} package passed as a string.}

\item{code_target}{character string containing a regular expression to be matched against code
while \emph{parsing} through scripts. If a character vector of length 2 or more is supplied,
 the first element is used with a warning. If looking for a \emph{pattern}, try \code{\link{findScriptsByPattern}}.}

\item{func_pattern}{character string containing a regular expression to be matched
against the functions found in the package chosen in the argument \code{pkg}.
If a character vector of length 2 or more is supplied, the first element is used with a warning.}
}
\value{
A data.frame with five columns: \cr
script - The name of the script containing the target, \cr
linenum - The line number on which the target is found, \cr
col - the number of characters into the line that the target can be found, \cr
text - the target matched, \cr
line - the target within its context
}
\description{
Find scripts that have an object or function that you know the name or package of
}
\details{
Parses scripts and finds which scripts have a sought object, such as the string \code{'password123'}
or a functional dependency on a package, e.g. \pkg{RJDBC}. \cr
This function actually reads through scripts and will discard scripts that do
not run due to typos and bad syntax. \cr
This function will NOT find a pattern such as \code{'x <- 3^2'}- for that task,
use \code{\link{findScriptsByPattern}}. \cr
NOTE: This function cannot distinguish between functions from different
packages that have the similar names.
}

