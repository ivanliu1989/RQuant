% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findScripts.R
\name{findScriptsByPattern}
\alias{findScriptsByPattern}
\title{Find Scripts that contain a variable or depend on a package by parsing them}
\usage{
findScriptsByPattern(path = ".", filename_pattern = ".R$",
  recursive = FALSE, code_pattern)
}
\arguments{
\item{path}{a character vector of full path names; the default corresponds to
the working directory, \code{\link{getwd}}. Tilde expansion
(see \code{\link{path.expand}}) is performed. Missing values will be ignored.}

\item{filename_pattern}{a regular expression- default is \code{'.R$'}. Only file
names which match the regular expression will be returned.}

\item{recursive}{logical. Should the listing recurse into directories?}

\item{code_pattern}{character vector of regular expressions (or simp;ly characters) to be matched against text in the script
while \emph{scanning} through scripts. If a character vector of length 2 or more is supplied,
 the first element is used with a warning.}
}
\value{
A data.frame with four columns: \cr
script - The name of the script containing the target, \cr
linenum - The line number on which the target is found, \cr
col - the number of characters into the line that the target can be found, \cr
line - the target within its context
}
\description{
Find scripts that have a pattern that you specify with a regular expression.
}
\details{
Scans scripts and finds which scripts have a sought pattern, E.G. \code{'x <- x^2'}. \cr
This function scans through scripts and will include obsolate scripts that do
 not run due to typos and bad syntax in its search. \cr
This function will find a pattern such as \code{'x <- x^2'}, unlike \code{\link{findScriptsByPattern}}.
}

